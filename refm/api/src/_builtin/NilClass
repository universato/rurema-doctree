= class NilClass < Object

nil のクラス。
nil は NilClass クラスの唯一のインスタンスです。
nil は false オブジェクトとともに偽を表し、
その他の全てのオブジェクトは真です。

== Instance Methods

--- &(other) -> false

常に false を返します。

@param other 論理積を行なう式です

#@samplecode 例
nil & true  # => false
nil & false # => false
nil & nil   # => false
nil & "a"   # => false
#@end

--- |(other) -> bool

other が真なら true を, 偽なら false を返します。

@param other 論理和を行なう式です

#@samplecode 例
nil | true   # => true
nil | false  # => false
nil | nil    # => false
nil | "a"    # => true
#@end

--- ^(other) -> bool

other が真なら true を, 偽なら false を返します。

@param other 排他的論理和を行なう式です

#@samplecode 例
nil ^ true  # => true
nil ^ false # => false
nil ^ nil   # => false
nil ^ "a"   # => true
#@end

--- ===(other) -> bool

other が nil なら true を, そうでないなら false を返します。

#@samplecode 例
nil === nil    # => true
nil === true   # => false
nil === false  # => false
nil === 1234   # => false
#@end

--- nil? -> bool

常に true を返します。

#@samplecode 例
nil.nil?   # => true
#@end

--- to_a -> Array

空配列 [] を返します。

#@samplecode 例
nil.to_a   #=> []
#@end

--- to_f -> Float

0.0 を返します。

#@samplecode 例
nil.to_f   #=> 0.0
#@end

--- to_i -> Integer

0 を返します。

#@samplecode 例
nil.to_i   #=> 0
#@end

--- to_s -> String

空文字列 "" を返します。

#@samplecode 例
nil.to_s   # => ""
#@end

--- inspect -> String

空文字列 "nil" を返します。
[[m:Kernel.#p]] の内部で利用されます。

#@samplecode 例
nil.inspect   # => "nil"
#@end

@see [[m:Object#inspect]], [[m:Kernel.#p]]

--- to_c -> Complex

0+0i を返します。

#@samplecode 例
nil.to_c # => (0+0i)
#@end

--- to_r -> Rational

0/1 を返します。

#@samplecode 例
nil.to_r # => (0/1)
#@end

--- rationalize      -> Rational
--- rationalize(eps) -> Rational

0/1 を返します。

@param eps 許容する誤差

引数 eps は常に無視されます。

#@samplecode 例
nil.rationalize      # => (0/1)
nil.rationalize(100) # => (0/1)
nil.rationalize(0.1) # => (0/1)
#@end

--- to_h -> {}

{} を返します。

#@samplecode 例
nil.to_h   #=> {}
#@end

#@since 2.6.0
--- =~(other) -> nil

右辺に正規表現オブジェクトを置いた正規表現マッチ obj =~ /RE/
をサポートするためのメソッドです。常に nil を返します。

#@#obj が文字列なのを期待していたが nil だった場合などにエラーを発生させずに正常に false を返すことができます。

@param other 任意のオブジェクトです。結果に影響しません。

#@samplecode 例
obj = 'regexp'
p(obj =~ /re/) #=> 0

obj = nil
p(obj =~ /re/) #=> nil
#@end

@see [[m:String#=~]]
#@end
